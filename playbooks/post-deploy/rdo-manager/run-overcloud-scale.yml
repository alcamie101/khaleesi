---
- name: scale overcloud nodes
  hosts: undercloud
  tasks:
    - name: set node type to scale
      set_fact: node_to_scale={{item}}
      when: installer.nodes.{{item}}.scale_change is defined
      with_items:
        - compute
        - cephstorage
        - blockstorage
        - swiftstorage

    - name: get plan list
      register: overcloud_uuid_result
      when: node_to_scale is defined
      shell: >
          source {{ instack_user_home }}/stackrc;
          openstack management plan list | grep overcloud | cut -d " " -f2

    - name: set fact for openstack management plan
      when: node_to_scale is defined
      set_fact:
        overcloud_uuid: "{{ overcloud_uuid_result.stdout }}"

    - name: setup environment variables for overcloud scale up
      template:
        src={{ base_dir }}/khaleesi/playbooks/post-deploy/rdo-manager/templates/scale-setup-env.j2
        dest={{ instack_user_home }}/scale-setup-env
        mode=0755
      when: node_to_scale is defined

    - name: setup environment variables for overcloud scale up
      template:
        src={{ base_dir }}/khaleesi/playbooks/post-deploy/rdo-manager/templates/update-scale.j2
        dest={{ instack_user_home }}/update-scale
        mode=0755

    - name: copy template file with environment variables for overcloud deploy
      template:
        src={{ base_dir }}/khaleesi/playbooks/installer/rdo-manager/templates/deploy-overcloudrc.j2
        dest={{ instack_user_home }}/deploy-overcloudrc
        mode=0755

    - name: copy template file with environment variables for nodes
      template:
        src={{ base_dir }}/khaleesi/playbooks/installer/rdo-manager/templates/deploy-nodes.j2
        dest={{ instack_user_home }}/deploy-nodesrc
        mode=0755

    - name: Contents of scale-setup-env
      shell: >
        cat {{ instack_user_home }}/scale-setup-env
      when: node_to_scale is defined

    - name: echo the deploy scale command
      register: overcloud_deploy_command
      when: node_to_scale is defined
      shell: >
          source {{ instack_user_home }}/stackrc;
          source {{ instack_user_home }}/deploy-nodesrc;
          source {{ instack_user_home }}/scale-setup-env;
          source {{ instack_user_home }}/deploy-overcloudrc;
          source {{ instack_user_home }}/update-scale;
          echo $DEPLOY_COMMAND

    - name: scale-overcloud
      register: overcloud_deployment_result
      when: node_to_scale is defined
      ignore_errors: yes
      shell: >
          source {{ instack_user_home }}/stackrc;
          {{ overcloud_deploy_command.stdout }} &> overcloud_deployment_scale_console.log

    - name: poll for heat stack-list to go to COMPLETE
      shell: >
        source {{ instack_user_home }}/stackrc;
        heat stack-list
      register: heat_stack_list_result
      until: heat_stack_list_result.stdout.find("COMPLETE") != -1
      retries: 10
      delay: 180
      when: node_to_scale is defined

    - name: get the number of nodes
      shell: >
        source {{ instack_user_home }}/stackrc;
        source {{ instack_user_home }}/scale-setup-env;
        nova list | grep $NODE_TO_SCALE_TYPE | cut -f2- -d':' | wc -l
      register: nova_list_output
      when: node_to_scale is defined

    - name: get value for scale_change
      shell: >
        source {{ instack_user_home }}/stackrc;
        source {{ instack_user_home }}/scale-setup-env;
        echo $NODE_SCALE_CHANGE
      register: scale_change_value
      when: node_to_scale is defined

    - name: echo heat resource list
      shell: >
          source {{ instack_user_home }}/stackrc;
          heat resource-list overcloud

    - name: check the number of nodes match the scaled values
      fail: msg="Overcloud nodes were not scaled correctly."
      when: (node_to_scale is defined) and (scale_change_value.stdout != nova_list_output.stdout)

    - name: print nova service-list
      shell: >
        source {{ instack_user_home }}/overcloudrc;
        nova service-list
      when: node_to_scale is defined

    - name: get nova service-list for compute nodes
      shell: >
        source {{ instack_user_home }}/overcloudrc;
        source {{ instack_user_home }}/scale-setup-env;
        nova service-list | grep nova-compute | cut -f2- -d':' | wc -l
      register: nova_service_compute
      when: node_to_scale is defined and node_to_scale == 'compute'

    - name: check the service list matches the number of compute nodes
      fail: msg="Overcloud nova list does not show expected number of compute services"
      when: (node_to_scale is defined) and node_to_scale == 'compute' and nova_service_compute.stdout != scale_change_value.stdout
