---
- name: introspect nodes
  hosts: undercloud
  tasks:
      - name: get full list of node UUIDs
        shell: >
             source {{ instack_user_home }}/stackrc;
             ironic node-list | grep 'power' |  awk '{print $2}'
        register: ironic_node_full_list_uuid

      - name: change value of mtu for vlan configuration
        sudo_user: root
        sudo: yes
        shell: >
            ip link set {{ item }} mtu {{ hw_env.interface.mtu }};
            echo "MTU={{ hw_env.interface.mtu }}" >> /etc/sysconfig/network-scripts/ifcfg-{{ item }}
        with_items: hw_env.interface.names
        when: hw_env is defined and hw_env.interface.names is defined

      - name: update mtu on the overcloud nics to match
        sudo_user: root
        sudo: yes
        lineinfile:
            dest: /etc/dnsmasq-ironic.conf
            state: present
            insertafter: EOF
            line: 'dhcp-option-force=26,{{ hw_env.interface.mtu }}'
        when: hw_env is defined and hw_env.interface.mtu is defined

      - name: restart neutron-dhcp-agent
        sudo_user: root
        sudo: yes
        service:
            name: neutron-dhcp-agent
            state: restarted
        when: hw_env is defined and hw_env.interface is defined

      - name: restart openstack-ironic-discoverd-dnsmasq.service
        shell: >
            sudo systemctl restart openstack-ironic-discoverd-dnsmasq.service;
        when: hw_env is defined and hw_env.interface is defined and product.full_version in ["7-director", "liberty"]

      - name: restart openstack-ironic-inspector-dnsmasq.service
        shell: >
            sudo systemctl restart openstack-ironic-inspector-dnsmasq.service;
        when: hw_env is defined and hw_env.interface is defined and product.full_version in ["8-director", "mitaka"]

      - name: start bulk introspection
        shell: >
            source {{ instack_user_home }}/stackrc;
            openstack baremetal introspection bulk start;
        when: installer.introspection_method == 'bulk' and hw_env.env_type != 'ovb_host_cloud'

      - name: introspect node by node
        shell: >
            source {{ instack_user_home }}/stackrc;
            ironic node-set-provision-state {{ item }} manage;
            openstack baremetal introspection start {{ item }};
            export STATUS=$(openstack baremetal introspection status {{ item }} | grep 'finished');
            while [[ $STATUS != *"True"* ]]; do
                echo "Waiting for instrospection to complete.";
                sleep 180;
                export STATUS=$(openstack baremetal introspection status {{ item }} | grep 'finished');
            done;
            openstack baremetal introspection status {{ item }} | grep 'error'
        register: introspect_status
        retries: 3
        delay: 5
        until: introspect_status.stdout.find("None") != -1
        with_items: ironic_node_full_list_uuid.stdout_lines
        when:  installer.introspection_method == 'node_by_node'

      - name: set node provision state to available
        shell: >
            source {{ instack_user_home }}/stackrc;
            ironic node-set-provision-state {{ item }} provide
        with_items: ironic_node_full_list_uuid.stdout_lines
        when:  installer.introspection_method == 'node_by_node'

      - name: check instrospections status
        register: introspection_result
        retries: 45
        delay: 20
        until: introspection_result.rc == 0
        shell: |
            source {{ instack_user_home }}/stackrc
            OUTPUT=$(openstack baremetal introspection bulk status)
            TOTAL_NODES=$(echo "$OUTPUT" | grep -E '\w{8}-\w{4}' | wc -l)
            INTROSPECTED_NODES=$(echo "$OUTPUT" | grep -E ' True *\| *None ' | wc -l)
            [ "$TOTAL_NODES" == "$INTROSPECTED_NODES" ]
        when: hw_env.env_type != 'ovb_host_cloud'

      - name: show profile
        shell: >
            source {{ instack_user_home }}/stackrc;
            instack-ironic-deployment  --show-profile;
