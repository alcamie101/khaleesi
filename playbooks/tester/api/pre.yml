---
- name: Preparation tasks for API tests
  hosts: controller
  gather_facts: yes
  roles:
    - component-test/set_facts
    - component-test/setup_env
    - component-test/repo
    - component-test/debug

- name: Copy project repo to tester host
  hosts: controller
  tasks:
      - name: rsync
        synchronize: src="{{ component_dir_path }}" dest="{{ ansible_env.HOME }}"

- name: Configure Tempest
  hosts: controller
  vars:
      controller_auth_url: "http://127.0.0.1:5000/v2.0"
      admin_password: "{{ hostvars[provisioner.nodes.controller.name].admin_password | default('redhat') }}"
  roles:
      - openstack/create_users
  tasks:
      - name: Ensure tempest configuration directory exists
        sudo: yes
        file: path={{ tester.component.conf_dir | default('/etc/tempest') }} state=directory mode=0777

      - name: Deploy tempet.conf
        sudo: yes
        template: src=templates/tempest_conf.j2 dest=/etc/tempest/tempest.conf mode=0666

      - name: Set public_network_id
        sudo: yes
        environment:
            OS_USERNAME: admin
            OS_PASSWORD: "{{ admin_password }}"
            OS_TENANT_NAME: admin
            OS_AUTH_URL: "{{ controller_auth_url }}"
        shell: >
            echo "public_network_id = $(neutron net-list | grep public | awk '{print $2}')" >> {{ tester.component.conf_dir | default('/etc/tempest') }}/tempest.conf;

      - name: Set tempest api environment
        shell: >
            echo "export OS_USERNAME={{ tester.accounts[0].username }}" >> ~/.bash_profile;
            echo "export OS_PASSWORD={{ tester.accounts[0].password }}" >> ~/.bash_profile;
            echo "export OS_TENANT_NAME={{ tester.accounts[0].tenant_name }}" >> ~/.bash_profile;
            echo "export OS_AUTH_URL={{ controller_auth_url }}" >> ~/.bash_profile
