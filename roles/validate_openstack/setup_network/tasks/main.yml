---
- name: set random number as a fact
  set_fact:
    random: "{{ tmp.node_prefix }}"

- name: admin pass
  set_fact: admin_password={{ admin_password }} | default({{ installer.validate.admin_password }})

- name: auth url
  set_fact: keystone_endpoint={{ keystone_endpoint }} | default({{ installer.validate.keystone_endpoint }})

- name: extract ip and port from endpoint
  urlparse:
      url: '{{ keystone_endpoint }}'
      facts_prefix: "public_"

- name: check if openstack api is available
  wait_for:
      host: "{{ public_ip }}"
      port: "{{ public_port }}"
      timeout: 60
      connect_timeout: 10

- name: get the guest-image
  get_url: >
    url="{{ installer.validate.image.url }}{{ installer.validate.image.id }}"
    dest={{ instack_user_home }}/{{ installer.validate.image.id }}

# assume that the image is in remote user homedir
- name: upload image
  register: glance_image_uuid_result
  glance_image:
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      name: "{{ installer.validate.image.id }}"
      container_format: bare
      disk_format: qcow2
      state: present
      file: "{{ instack_user_home }}/{{ installer.validate.image.id }}"

- name: create public network
  register: public_network_uuid_result
  quantum_network:
      state: present
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      name: "{{ installer.network.name }}"
      provider_network_type: "{{ hw_env.network_type }}"
      provider_physical_network: "{{ hw_env.physical_network }}"
      provider_segmentation_id: "{{ hw_env.ExternalNetworkVlanID }}"
      router_external: yes
      shared: no

- name: Create subnet for public network
  quantum_subnet:
      state: present
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      network_name: "{{ installer.network.name }}"
      name: "{{ installer.network.name }}"
      enable_dhcp: False
      gateway_ip: "{{ hw_env.network_gateway }}"
      cidr: "{{ hw_env.floating_ip_cidr }}"
      allocation_pool_start: "{{ hw_env.floating_ip_start }}"
      allocation_pool_end: "{{ hw_env.floating_ip_end }}"

# create tenant network
- name: create tenant network
  register: tenant_network_uuid_result
  quantum_network:
      state: present
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      name: "{{ installer.validate.tenant_network_name }}_{{ random }}"
      shared: no

- name: Create subnet for tenant network
  register: subnet_tenant_network_uuid_result
  quantum_subnet:
      state: present
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      network_name: "{{ installer.validate.tenant_network_name }}_{{ random }}"
      name: "{{ installer.validate.tenant_network_name }}_{{ random }}"
      enable_dhcp: True
      gateway_ip: "10.0.0.1"
      cidr: "10.0.0.0/24"
      allocation_pool_start: "10.0.0.20"
      allocation_pool_end: "10.0.0.60"

- name: create router
  register: router_uuid_result
  quantum_router:
      state: present
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      name: "{{ installer.validate.router_name }}_{{ random }}"

- name: create router gateway
  quantum_router_gateway:
      state: present
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      router_name: "{{ installer.validate.router_name }}_{{ random }}"
      network_name: "{{ installer.network.name }}"

- name: create router interface
  quantum_router_interface:
      state: present
      auth_url: "{{ keystone_endpoint }}"
      login_username: "{{ installer.validate.admin_username }}"
      login_password: "{{ admin_password }}"
      login_tenant_name: "{{ installer.validate.admin_tenant_name }}"
      tenant_name: "{{ installer.validate.admin_tenant_name }}"
      router_name: "{{ installer.validate.router_name }}_{{ random }}"
      subnet_name: "{{ installer.validate.tenant_network_name }}_{{ random }}"

# set some facts to be used in the test_instance role
- name: set fact
  set_fact: glance_image_uuid_result_id="{{ glance_image_uuid_result.id }}"

- name: set fact
  set_fact: tenant_network_uuid_result_id="{{ tenant_network_uuid_result.id }}"

- name: set fact
  set_fact: internal_network_name="{{ installer.validate.tenant_network_name }}_{{ random }}"
